import numpy as np
from numpy.testing import assert_array_equal
from skfuzzy.image import pad


def test_pad_nopsf():
    I = np.arange(30).reshape((5, 6))
    exp_5x5 = np.r_[[[14, 13, 12, 13, 14, 15, 16, 17, 16, 15],
                     [ 8,  7,  6,  7,  8,  9, 10, 11, 10,  9],
                     [ 2,  1,  0,  1,  2,  3,  4,  5,  4,  3],
                     [ 8,  7,  6,  7,  8,  9, 10, 11, 10,  9],
                     [14, 13, 12, 13, 14, 15, 16, 17, 16, 15],
                     [20, 19, 18, 19, 20, 21, 22, 23, 22, 21],
                     [26, 25, 24, 25, 26, 27, 28, 29, 28, 27],
                     [20, 19, 18, 19, 20, 21, 22, 23, 22, 21],
                     [14, 13, 12, 13, 14, 15, 16, 17, 16, 15]]]
    test_nopsf = pad(I, [5, 5])

    assert_array_equal(test_nopsf, exp_5x5)


def test_pad_reflect():
    I = np.arange(30).reshape((5, 6))
    psf_5x5 = np.zeros((5, 5))
    psf_5x7 = np.zeros((5, 7))
    psf_9x11 = np.zeros((9, 11))

    test_5x5 = pad(I, psf_5x5)  # Symmetric padding
    exp_5x5 = np.r_[[[14, 13, 12, 13, 14, 15, 16, 17, 16, 15],
                     [ 8,  7,  6,  7,  8,  9, 10, 11, 10,  9],
                     [ 2,  1,  0,  1,  2,  3,  4,  5,  4,  3],
                     [ 8,  7,  6,  7,  8,  9, 10, 11, 10,  9],
                     [14, 13, 12, 13, 14, 15, 16, 17, 16, 15],
                     [20, 19, 18, 19, 20, 21, 22, 23, 22, 21],
                     [26, 25, 24, 25, 26, 27, 28, 29, 28, 27],
                     [20, 19, 18, 19, 20, 21, 22, 23, 22, 21],
                     [14, 13, 12, 13, 14, 15, 16, 17, 16, 15]]]

    test_5x7 = pad(I, psf_5x7)  # Asymmetric padding
    exp_5x7 = np.r_[[[15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14],
                     [ 9,  8,  7,  6,  7,  8,  9, 10, 11, 10,  9,  8],
                     [ 3,  2,  1,  0,  1,  2,  3,  4,  5,  4,  3,  2],
                     [ 9,  8,  7,  6,  7,  8,  9, 10, 11, 10,  9,  8],
                     [15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14],
                     [21, 20, 19, 18, 19, 20, 21, 22, 23, 22, 21, 20],
                     [27, 26, 25, 24, 25, 26, 27, 28, 29, 28, 27, 26],
                     [21, 20, 19, 18, 19, 20, 21, 22, 23, 22, 21, 20],
                     [15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14]]]

    test_9x11 = pad(I, psf_9x11)    # Pad with too much for reflect
    exp_9x11 = np.r_[[[22, 21, 20, 19, 18, 19, 20, 21, 22, 23, 22, 21, 20, 19],
                      [16, 15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14, 13],
                      [10,  9,  8,  7,  6,  7,  8,  9, 10, 11, 10,  9,  8,  7],
                      [ 4,  3,  2,  1,  0,  1,  2,  3,  4,  5,  4,  3,  2,  1],
                      [10,  9,  8,  7,  6,  7,  8,  9, 10, 11, 10,  9,  8,  7],
                      [16, 15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14, 13],
                      [22, 21, 20, 19, 18, 19, 20, 21, 22, 23, 22, 21, 20, 19],
                      [28, 27, 26, 25, 24, 25, 26, 27, 28, 29, 28, 27, 26, 25],
                      [22, 21, 20, 19, 18, 19, 20, 21, 22, 23, 22, 21, 20, 19],
                      [16, 15, 14, 13, 12, 13, 14, 15, 16, 17, 16, 15, 14, 13],
                      [10,  9,  8,  7,  6,  7,  8,  9, 10, 11, 10,  9,  8,  7]]]

    assert_array_equal(test_5x5, exp_5x5)
    assert_array_equal(test_5x7, exp_5x7)
    assert_array_equal(test_9x11, exp_9x11)


def test_pad_replicate():
    I = np.arange(30).reshape((5, 6))
    test_5x7 = pad(I, [5, 7], mode='replicate')
    exp_5x7 = np.r_[[[ 0,  0,  0,  0,  1,  2,  3,  4,  5,  5,  5,  5],
                     [ 0,  0,  0,  0,  1,  2,  3,  4,  5,  5,  5,  5],
                     [ 0,  0,  0,  0,  1,  2,  3,  4,  5,  5,  5,  5],
                     [ 6,  6,  6,  6,  7,  8,  9, 10, 11, 11, 11, 11],
                     [12, 12, 12, 12, 13, 14, 15, 16, 17, 17, 17, 17],
                     [18, 18, 18, 18, 19, 20, 21, 22, 23, 23, 23, 23],
                     [24, 24, 24, 24, 25, 26, 27, 28, 29, 29, 29, 29],
                     [24, 24, 24, 24, 25, 26, 27, 28, 29, 29, 29, 29],
                     [24, 24, 24, 24, 25, 26, 27, 28, 29, 29, 29, 29],
                     [24, 24, 24, 24, 25, 26, 27, 28, 29, 29, 29, 29]]]

    assert_array_equal(test_5x7, exp_5x7)


def test_pad_zeros():
    I = np.arange(30).reshape((5, 6))
    test_5x7 = pad(I, [5, 7], mode='zero')
    exp_5x7 = np.r_[[[0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [0,  0,  0,  0,  1,  2,  3,  4,  5,  0,  0,  0],
                     [0,  0,  0,  6,  7,  8,  9, 10, 11,  0,  0,  0],
                     [0,  0,  0, 12, 13, 14, 15, 16, 17,  0,  0,  0],
                     [0,  0,  0, 18, 19, 20, 21, 22, 23,  0,  0,  0],
                     [0,  0,  0, 24, 25, 26, 27, 28, 29,  0,  0,  0],
                     [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]]]

    assert_array_equal(test_5x7, exp_5x7)


if __name__ == "__main__":
    np.testing.run_module_suite()
